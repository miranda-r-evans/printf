#include "holberton.h"

int main(void)
{
	int n;
	long int l_int = 159;
	unsigned long int lu_int = 159;

	printf("\n-----CHARS-----\n");
	n = printf("char:%c\n", 'c');
	printf("- %d\n", n);
	n = _printf("char:%c\n", 'c');
	printf("- %d\n", n);
	n = printf("char with width:%5c\n", 'c');
	printf("- %d\n", n);
	n = _printf("char with width:%5c\n", 'c');
	printf("- %d\n", n);
	n = printf("char with precis:%.5c\n", 'c');
	printf("- %d\n", n);
	n = _printf("char with precis:%.5c\n", 'c');
	printf("- %d\n", n);
	n = printf("char with hyphen:%-5c:\n", 'c');
	printf("- %d\n", n);
	n = _printf("char with hyphen:%-5c:\n", 'c');
	printf("- %d\n", n);

	printf("\n-----STRINGS-----\n");
	n = printf("string:%s\n", "hey there");
	printf("- %d\n", n);
	n = printf("string:%s\n", "hey there");
	printf("- %d\n", n);
	n = printf("string with width:%15s\n", "hey there");
	printf("- %d\n", n);
	n = _printf("string with width:%15s\n", "hey there");
	printf("- %d\n", n);
	n = printf("string with precis:%.15s\n", "hey there");
	printf("- %d\n", n);
	n = _printf("string with precis:%.15s\n", "hey there");
	printf("- %d\n", n);
	n = printf("string with hyphen:%-15s:\n", "hey there");
	printf("- %d\n", n);
	n = _printf("string with hyphen:%-15s:\n", "hey there");
	printf("- %d\n", n);

	printf("\n-----SIGNED INTS-----\n");
	n = printf("int:%i\n", 123);
	printf("- %d\n", n);
	n = _printf("int:%i\n", 123);
	printf("- %d\n", n);
	n = printf("neg int:%d\n", -456);
	printf("- %d\n", n);
	n = _printf("neg int:%d\n", -456);
	printf("- %d\n", n);
	n = printf("int max:%d\n", INT_MAX);
	printf("- %d\n", n);
	n = _printf("int max:%d\n", INT_MAX);
	printf("- %d\n", n);
	n = printf("int min:%d\n", INT_MIN);
	printf("- %d\n", n);
	n = _printf("int min:%d\n", INT_MIN);
	printf("- %d\n", n);
	n = printf("number zero:%d\n", 0);
	printf("- %d\n", n);
	n = _printf("number zero:%d\n", 0);
	printf("- %d\n", n);
	n = printf("field width:%10d\n", 789);
	printf("- %d\n", n);
	n = _printf("field width:%10d\n", 789);
	printf("- %d\n", n);
	n = printf("field width:%*d\n", 10, 789);
	printf("- %d\n", n);
	n = _printf("field width:%*d\n", 10, 789);
	printf("- %d\n", n);
	n = printf("field width:%10d\n", -789);
	printf("- %d\n", n);
	n = _printf("field width:%10d\n", -789);
	printf("- %d\n", n);
	n = printf("field width:%*d\n", 10, -789);
	printf("- %d\n", n);
	n = _printf("field width:%*d\n", 10, -789);
	printf("- %d\n", n);
	n = printf("precision:%.10d\n", 234);
	printf("- %d\n", n);
	n = _printf("precision:%.10d\n", 234);
	printf("- %d\n", n);
	n = printf("precision:%.*d\n", 10, 234);
	printf("- %d\n", n);
	n = _printf("precision:%.*d\n", 10, 234);
	printf("- %d\n", n);
	n = printf("precision:%.10d\n", -234);
	printf("- %d\n", n);
	n = _printf("precision:%.10d\n", -234);
	printf("- %d\n", n);
	n = printf("precision:%.*d\n", 10, -234);
	printf("- %d\n", n);
	n = _printf("precision:%.*d\n", 10, -234);
	printf("- %d\n", n);
	n = printf("hyphen:%-10d:\n", 567);
	printf("- %d\n", n);
	n = _printf("hyphen:%-10d:\n", 567);
	printf("- %d\n", n);
	n = printf("hyphen:%-10d:\n", -567);
	printf("- %d\n", n);
	n = _printf("hyphen:%-10d:\n", -567);
	printf("- %d\n", n);
	n = printf("plus:%+d\n", 111);
	printf("- %d\n", n);
	n = _printf("plus:%+d\n", 111);
	printf("- %d\n", n);
	n = printf("plus:%+d\n", -111);
	printf("- %d\n", n);
	n = _printf("plus:%+d\n", -111);
	printf("- %d\n", n);
	n = printf("space:% d\n", 222);
	printf("- %d\n", n);
	n = _printf("space:% d\n", 222);
	printf("- %d\n", n);
	n = printf("space with plus:% +d\n", 222);
	printf("- %d\n", n);
	n = _printf("space with plus:% +d\n", 222);
	printf("- %d\n", n);
	n = printf("zero flag:%010d\n", 891);
	printf("- %d\n", n);
	n = _printf("zero flag:%010d\n", 891);
	printf("- %d\n", n);
	n = printf("zero flag:%010d\n", -891);
	printf("- %d\n", n);
	n = _printf("zero flag:%010d\n", -891);
	printf("- %d\n", n);
	n = printf("long:%ld\n", LONG_MIN);
	printf("- %d\n", n);
	n = _printf("long:%ld\n", LONG_MIN);
	printf("- %d\n", n);
	n = printf("long:%ld\n", LONG_MAX);
	printf("- %d\n", n);
	n = _printf("long:%ld\n", LONG_MAX);
	printf("- %d\n", n);
	n = printf("short:%hd\n", SHRT_MIN);
	printf("- %d\n", n);
	n = _printf("short:%hd\n", SHRT_MIN);
	printf("- %d\n", n);
	n = printf("short:%hd\n", SHRT_MAX);
	printf("- %d\n", n);
	n = _printf("short:%hd\n", SHRT_MAX);
	printf("- %d\n", n);
	n = printf("all together:%-+ 0*.*ld:\n", 10, 5, l_int);
	printf("- %d\n", n);
	n = _printf("all together:%-+ 0*.*ld:\n", 10, 5, l_int);
	printf("- %d\n", n);
	n = printf("all together:%-+ 0*.*ld:\n", 10, 5, -l_int);
	printf("- %d\n", n);
	n = _printf("all together:%-+ 0*.*ld:\n", 10, 5, -l_int);
	printf("- %d\n", n);

	printf("\n-----UNSIGNED INTS-----\n");
        n = printf("int:%u\n", 123);
        printf("- %d\n", n);
        n = _printf("int:%u\n", 123);
        printf("- %d\n", n);
	n = printf("unsigned with neg:%u\n", -456);
	printf("- %d\n", n);
	n = _printf("unsigned with neg:%u\n", -456);
	printf("- %d\n", n);
        n = printf("u int max:%u\n", UINT_MAX);
        printf("- %d\n", n);
        n = _printf("u int max:%u\n", UINT_MAX);
        printf("- %d\n", n);
        n = printf("number zero:%u\n", 0);
        printf("- %d\n", n);
        n = _printf("number zero:%u\n", 0);
        printf("- %d\n", n);
        n = printf("field width:%10u\n", 789);
        printf("- %d\n", n);
        n = _printf("field width:%10u\n", 789);
        printf("- %d\n", n);
        n = printf("field width:%*u\n", 10, 789);
        printf("- %d\n", n);
        n = _printf("field width:%*u\n", 10, 789);
        printf("- %d\n", n);
        n = printf("precision:%.10u\n", 234);
        printf("- %d\n", n);
        n = _printf("precision:%.10u\n", 234);
        printf("- %d\n", n);
        n = printf("precision:%.*u\n", 10, 234);
        printf("- %d\n", n);
        n = _printf("precision:%.*u\n", 10, 234);
        printf("- %d\n", n);
        n = printf("hyphen:%-10u:\n", 567);
        printf("- %d\n", n);
        n = _printf("hyphen:%-10u:\n", 567);
        printf("- %d\n", n);
	n = printf("plus:%+u\n", 111);
	printf("- %d\n", n);
	n = _printf("plus:%+u\n", 111);
	printf("- %d\n", n);
        n = printf("space:% u\n", 222);
	printf("- %d\n", n);
	n = _printf("space:% u\n", 222);
        printf("- %d\n", n);
        n = printf("zero flag:%010u\n", 891);
        printf("- %d\n", n);
        n = _printf("zero flag:%010u\n", 891);
        printf("- %d\n", n);
        n = printf("long:%lu\n", ULONG_MAX);
        printf("- %d\n", n);
        n = _printf("long:%lu\n", ULONG_MAX);
        printf("- %d\n", n);
	n = printf("short:%hu\n", USHRT_MAX);
	printf("- %d\n", n);
	n = _printf("short:%hu\n", USHRT_MAX);
	printf("- %d\n", n);
	n = printf("all together:%-+ 0*.*lu:\n", 10, 5, lu_int);
	printf("- %d\n", n);
	n = _printf("all together:%-+ 0*.*lu:\n", 10, 5, lu_int);
	printf("- %d\n", n);

	printf("\n-----OCTAL-----\n");
	n = printf("umax:%o\n", UINT_MAX);
	printf("- %d\n", n);
	n = _printf("umax:%o\n", UINT_MAX);
	printf("- %d\n", n);
	n = printf("negative:%o\n", -1);
	printf("- %d\n", n);
	n = _printf("negative:%o\n", -1);
	printf("- %d\n", n);
	n = printf("zero:%o\n", 0);
	printf("- %d\n", n);
	n = _printf("zero:%o\n", 0);
	printf("- %d\n", n);
	n = printf("field width:%10o\n", 30);
	printf("- %d\n", n);
	n = _printf("field width:%10o\n", 30);
	printf("- %d\n", n);
	n = printf("field width:%*o\n", 10, 30);
	printf("- %d\n", n);
	n = _printf("field width:%*o\n", 10, 30);
	printf("- %d\n", n);
	n = printf("precis:%.10o\n", 30);
	printf("- %d\n", n);
	n = _printf("precis:%.10o\n", 30);
	printf("- %d\n", n);
	n = printf("precis:%.*o\n", 10, 30);
	printf("- %d\n", n);
	n = _printf("precis:%.*o\n", 10, 30);
	printf("- %d\n", n);
	n = printf("hyphen:%-10o:\n", 38);
	printf("- %d\n", n);
	n = _printf("hyphen:%-10o:\n", 38);
	printf("- %d\n", n);
	n = printf("plus:%+10o\n", 42);
	printf("- %d\n", n);
	n = _printf("plus:%+10o\n", 42);
	printf("- %d\n", n);
	n = printf("space:% o\n", 50);
	printf("- %d\n", n);
	n = _printf("space:% o\n", 50);
	printf("- %d\n", n);
	n = printf("zero flag:%010o\n", 123);
	printf("- %d\n", n);
	n = _printf("zero flag:%010o\n", 123);
	printf("- %d\n", n);
	n = printf("hash:%#10o\n", 52);
	printf("- %d\n", n);
	n = _printf("hash:%#10o\n", 52);
	printf("- %d\n", n);
	n = printf("hash with number zero:%#o\n", 0);
	printf("- %d\n", n);
	n = _printf("hash with number zero:%#o\n", 0);
	printf("- %d\n", n);
	n = printf("hash with precision:%#.3o\n", 52);
	printf("- %d\n", n);
	n = _printf("hash with precision:%#.3o\n", 52);
	printf("- %d\n", n);
	n = printf("all together:%#-+ *.*o:\n", 15, 10, 54);
	printf("- %d\n", n);
	n = _printf("all together:%#-+ *.*o:\n", 15, 10, 54);
	printf("- %d\n", n);

/* code for hex with lowercase and hex with uppercase is almost identical */
/* so I'm just going to test one */
	printf("\n-----HEX-----\n");
	n = printf("umax:%x\n", UINT_MAX);
        printf("- %d\n", n);
        n = _printf("umax:%x\n", UINT_MAX);
        printf("- %d\n", n);
        n = printf("negative:%x\n", -1);
        printf("- %d\n", n);
        n = _printf("negative:%x\n", -1);
        printf("- %d\n", n);
        n = printf("zero:%x\n", 0);
        printf("- %d\n", n);
        n = _printf("zero:%x\n", 0);
        printf("- %d\n", n);
        n = printf("field width:%10x\n", 30);
        printf("- %d\n", n);
        n = _printf("field width:%10x\n", 30);
        printf("- %d\n", n);
        n = printf("field width:%*x\n", 10, 30);
        printf("- %d\n", n);
        n = _printf("field width:%*x\n", 10, 30);
        printf("- %d\n", n);
        n = printf("precis:%.10x\n", 30);
        printf("- %d\n", n);
        n = _printf("precis:%.10x\n", 30);
        printf("- %d\n", n);
        n = printf("precis:%.*x\n", 10, 30);
        printf("- %d\n", n);
        n = _printf("precis:%.*x\n", 10, 30);
        printf("- %d\n", n);
        n = printf("hyphen:%-10x:\n", 38);
        printf("- %d\n", n);
        n = _printf("hyphen:%-10x:\n", 38);
	n = printf("plus:%+10x\n", 42);
        printf("- %d\n", n);
        n = _printf("plus:%+10x\n", 42);
        printf("- %d\n", n);
        n = printf("space:% x\n", 50);
        printf("- %d\n", n);
        n = _printf("space:% x\n", 50);
        printf("- %d\n", n);
        n = printf("zero flag:%010x\n", 123);
        printf("- %d\n", n);
        n = _printf("zero flag:%010x\n", 123);
        printf("- %d\n", n);
        n = printf("hash:%#10x\n", 52);
        printf("- %d\n", n);
        n = _printf("hash:%#10x\n", 52);
        printf("- %d\n", n);
	n = printf("hash with number zero:%#o\n", 0);
        printf("- %d\n", n);
        n = _printf("hash with number zero:%#o\n", 0);
        printf("- %d\n", n);
        n = printf("hash with precision:%#.3x\n", 52);
        printf("- %d\n", n);
        n = _printf("hash with precision:%#.3x\n", 52);
        printf("- %d\n", n);
        n = printf("all together:%#-+ *.*x:\n", 15, 10, 54);
        printf("- %d\n", n);
        n = _printf("all together:%#-+ *.*x:\n", 15, 10, 54);
        printf("- %d\n", n);

	printf("\n-----POINTERS-----\n");
	n = printf("null:%p\n", NULL);
	printf("- %d\n", n);
	n = _printf("null:%p\n", NULL);
	printf("- %d\n", n);
	n = printf("number zero:%p\n", 0);
	printf("- %d\n", n);
	n = _printf("number zero:%p\n", 0);
	printf("- %d\n", n);
	n = printf("negative:%p\n" -1);
	printf("- %d\n", n);
	n = _printf("negative:%p\n" -1);
	printf("- %d\n", n);
	n = printf("number:%p\n", 1);
	printf("- %d\n", n);
	n = _printf("number:%p\n", 1);
	printf("- %d\n", n);
	n = printf("pointer:%p\n", &n);
	printf("- %d\n", n);
	n = _printf("pointer:%p\n", &n);
	printf("- %d\n", n);
	n = printf("field width:%10p\n", &n);
	printf("- %d\n", n);
	n = _printf("field width:%10p\n", &n);
	printf("- %d\n", n);
	n = printf("precision:%.10p\n", &n);
	printf("- %d\n", n);
	n = _printf("precision:%.10p\n", &n);
	printf("- %d\n", n);
	n = printf("hyphen:%-10p:\n", &n);
	printf("- %d\n", n);
	n = _printf("hyphen:%-10p:\n", &n);
	printf("- %d\n", n);
	n = printf("zero flag:%010p\n", &n);
	printf("- %d\n", n);
	n = _printf("zero flag:%010p\n", &n);
	printf("- %d\n", n);

	printf("\n-----CUSTOM------\n");
	n = _printf("binary:%b\n", 71);
	printf("- %d\n", n);
	n = _printf("non-printing:%S\n", "hello\tthere\n");
	printf("- %d\n", n);
	n = _printf("reverse:%r\n", "reverse this string");
	printf("- %d\n", n);
	n = _printf("rot13:%R\n", "rot13 this string");
	printf("- %d\n", n);

	printf("\n-----EDGE CASES-----\n");
	n = printf(NULL);
	printf("- %d\n", n);
	n = _printf(NULL);
	printf("- %d\n", n);
	n = printf("%%\n");
	printf("- %d\n", n);
	n = _printf("%%\n");
	printf("- %d\n", n);
	n = printf("no conversion spec:%+q, %d\n", 1);
	printf("- %d\n", n);
	n = _printf("no conversion spec:%+q, %d\n", 1);
	printf("- %d\n", n);
	n = printf("a string with no formatting\n");
	printf("- %d\n", n);
	n = _printf("a string with no formatting\n");
	printf("- %d\n", n);
	n = printf("");
	printf("- %d\n", n);
	n = _printf("");
	printf("- %d\n", n);

	return (0);
}
